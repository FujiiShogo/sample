name: frontend

on:
  push:
    paths:
      - "ui/**"
    branches:
      - master
      - release/*
  pull_request:
    paths:
      - "ui/**"
    types:
      - opened
      - synchronize
      - reopened

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v2.4.0
        with:
          node-version: "15"

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Build
        run: |
          cd ./ui
          npm install
          npm run build:prod
  e2e:
    needs:
      - build
    runs-on: ubuntu-latest
    services:
       db:
         image: postgres
         env:
           POSTGRES_PASSWORD: password
           POSTGRES_DB: blogdb
           POSTGRES_USER: user
         ports:
          - 5432:5432
         # Set health checks to wait until postgres has started
         options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5  
    steps:
      - uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v2.4.0
        with:
          node-version: "15"

      - name: Cache Node.js modules
        uses: actions/cache@v2.1.6
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: Build and Run E2E tests
        run: |
          json=$(curl --request POST \
          --url https://dev-ese8241b.us.auth0.com/oauth/token \
          --header 'content-type: application/json' \
          --data '{"client_id":"${{ secrets.CLIENT_ID}}","client_secret":"${{secrets.CLIENT_SECRET}}","audience":"https://hantsy.github.io/api","grant_type":"client_credentials"}')
          export TOKEN=$( jq -r ".access_token" <<<"$json" )
          echo "token: $TOKEN"
          cd ./api
          npm install --registry=https://registry.npmjs.org
          npm run test:e2e -- --runInBand --forceExit --detectOpenHandles